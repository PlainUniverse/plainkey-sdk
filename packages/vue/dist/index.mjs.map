{"version":3,"file":"index.mjs","names":["registerError: Ref<string | null>","registeredCredential: Ref<RegistrationCompleteResponse[\"credential\"] | null>","registeredResponse: Ref<RegistrationCompleteResponse | null>","addCredentialError: Ref<string | null>","addedCredentialResponse: Ref<UserCredentialCompleteResponse | null>","loginError: Ref<string | null>","loggedInResponse: Ref<LoginCompleteResponse | null>","registrationResult: RegistrationCompleteResponse","credentialResult: UserCredentialCompleteResponse","loginResult: LoginCompleteResponse"],"sources":["../src/usePlainkey/index.ts"],"sourcesContent":["import { Ref, ref } from \"vue\"\nimport { PlainKeyClient } from \"@plainkey/browser/\"\nimport type {\n  RegistrationCompleteResponse,\n  UserCredentialCompleteResponse,\n  LoginCompleteResponse\n} from \"@plainkey/types/\"\n\nimport type {\n  LoginBeginRequest,\n  RegistrationBeginRequest,\n  UserCredentialBeginRequest\n} from \"@plainkey/types/\"\n\nexport type ErrorResponse = {\n  error: string\n}\n\nexport type usePlainKeyParams = {\n  projectId: string\n}\n\nexport function usePlainKey(usePlainKeyParams: usePlainKeyParams) {\n  const { projectId } = usePlainKeyParams\n  const plainKeyClient = new PlainKeyClient({ projectId })\n\n  // Registration (user creation + passkey registration)\n  const isRegistering = ref(false)\n  const registerError: Ref<string | null> = ref(null)\n  const registerSuccess = ref(false)\n  const registeredCredential: Ref<RegistrationCompleteResponse[\"credential\"] | null> = ref(null)\n  const registeredResponse: Ref<RegistrationCompleteResponse | null> = ref(null)\n\n  // Credential registration (passkey registration to existing user)\n  const isAddingCredential = ref(false)\n  const addCredentialError: Ref<string | null> = ref(null)\n  const addCredentialSuccess = ref(false)\n  const addedCredentialResponse: Ref<UserCredentialCompleteResponse | null> = ref(null)\n\n  // Login\n  const isLoggingIn = ref(false)\n  const loginError: Ref<string | null> = ref(null)\n  const loginSuccess = ref(false)\n  const loggedInResponse: Ref<LoginCompleteResponse | null> = ref(null)\n\n  async function register(\n    beginParams: RegistrationBeginRequest\n  ): Promise<RegistrationCompleteResponse | ErrorResponse> {\n    try {\n      isRegistering.value = true\n      registerError.value = null\n      registerSuccess.value = false\n      registeredCredential.value = null\n\n      const registrationResult: RegistrationCompleteResponse =\n        await plainKeyClient.Registration(beginParams)\n\n      registerSuccess.value = registrationResult.success\n      registeredCredential.value = registrationResult.credential\n      registeredResponse.value = registrationResult\n      return registrationResult\n    } catch (err) {\n      registerError.value = err instanceof Error ? err.message : \"Registration failed\"\n      return { error: registerError.value }\n    } finally {\n      isRegistering.value = false\n    }\n  }\n\n  async function addCredential(\n    beginParams: UserCredentialBeginRequest\n  ): Promise<UserCredentialCompleteResponse | ErrorResponse> {\n    try {\n      isAddingCredential.value = true\n      addCredentialError.value = null\n      addCredentialSuccess.value = false\n      addedCredentialResponse.value = null\n\n      const credentialResult: UserCredentialCompleteResponse =\n        await plainKeyClient.AddCredential(beginParams)\n\n      addCredentialSuccess.value = credentialResult.success\n      addedCredentialResponse.value = credentialResult\n      return credentialResult\n    } catch (err) {\n      addCredentialError.value = err instanceof Error ? err.message : \"Add credential failed\"\n      return { error: addCredentialError.value }\n    } finally {\n      isAddingCredential.value = false\n    }\n  }\n\n  async function login(beginParams: LoginBeginRequest): Promise<LoginCompleteResponse> {\n    try {\n      isLoggingIn.value = true\n      loginError.value = null\n      loginSuccess.value = false\n      loggedInResponse.value = null\n\n      const loginResult: LoginCompleteResponse = await plainKeyClient.Login(beginParams)\n\n      // Update refs\n      loginSuccess.value = loginResult.verified\n      loggedInResponse.value = loginResult\n      return loginResult\n    } catch (err) {\n      loginError.value = err instanceof Error ? err.message : \"Login failed\"\n      return {\n        verified: false,\n        user: { id: \"\" },\n        token: { sessionId: \"\", token: \"\", expiresInSeconds: 0, tokenType: \"\", refreshToken: \"\" }\n      }\n    } finally {\n      isLoggingIn.value = false\n    }\n  }\n\n  return {\n    register,\n    isRegistering,\n    error: registerError,\n    registerSuccess,\n    registeredCredential,\n    registeredResponse,\n    addCredential,\n    isAddingCredential,\n    addCredentialError,\n    addCredentialSuccess,\n    addedCredentialResponse,\n    login,\n    isLoggingIn,\n    loginError,\n    loginSuccess,\n    loggedInResponse\n  }\n}\n"],"mappings":";;;;AAsBA,SAAgB,YAAY,mBAAsC;CAChE,MAAM,EAAE,cAAc;CACtB,MAAM,iBAAiB,IAAI,eAAe,EAAE,WAAW,CAAC;CAGxD,MAAM,gBAAgB,IAAI,MAAM;CAChC,MAAMA,gBAAoC,IAAI,KAAK;CACnD,MAAM,kBAAkB,IAAI,MAAM;CAClC,MAAMC,uBAA+E,IAAI,KAAK;CAC9F,MAAMC,qBAA+D,IAAI,KAAK;CAG9E,MAAM,qBAAqB,IAAI,MAAM;CACrC,MAAMC,qBAAyC,IAAI,KAAK;CACxD,MAAM,uBAAuB,IAAI,MAAM;CACvC,MAAMC,0BAAsE,IAAI,KAAK;CAGrF,MAAM,cAAc,IAAI,MAAM;CAC9B,MAAMC,aAAiC,IAAI,KAAK;CAChD,MAAM,eAAe,IAAI,MAAM;CAC/B,MAAMC,mBAAsD,IAAI,KAAK;CAErE,eAAe,SACb,aACuD;AACvD,MAAI;AACF,iBAAc,QAAQ;AACtB,iBAAc,QAAQ;AACtB,mBAAgB,QAAQ;AACxB,wBAAqB,QAAQ;GAE7B,MAAMC,qBACJ,MAAM,eAAe,aAAa,YAAY;AAEhD,mBAAgB,QAAQ,mBAAmB;AAC3C,wBAAqB,QAAQ,mBAAmB;AAChD,sBAAmB,QAAQ;AAC3B,UAAO;WACA,KAAK;AACZ,iBAAc,QAAQ,eAAe,QAAQ,IAAI,UAAU;AAC3D,UAAO,EAAE,OAAO,cAAc,OAAO;YAC7B;AACR,iBAAc,QAAQ;;;CAI1B,eAAe,cACb,aACyD;AACzD,MAAI;AACF,sBAAmB,QAAQ;AAC3B,sBAAmB,QAAQ;AAC3B,wBAAqB,QAAQ;AAC7B,2BAAwB,QAAQ;GAEhC,MAAMC,mBACJ,MAAM,eAAe,cAAc,YAAY;AAEjD,wBAAqB,QAAQ,iBAAiB;AAC9C,2BAAwB,QAAQ;AAChC,UAAO;WACA,KAAK;AACZ,sBAAmB,QAAQ,eAAe,QAAQ,IAAI,UAAU;AAChE,UAAO,EAAE,OAAO,mBAAmB,OAAO;YAClC;AACR,sBAAmB,QAAQ;;;CAI/B,eAAe,MAAM,aAAgE;AACnF,MAAI;AACF,eAAY,QAAQ;AACpB,cAAW,QAAQ;AACnB,gBAAa,QAAQ;AACrB,oBAAiB,QAAQ;GAEzB,MAAMC,cAAqC,MAAM,eAAe,MAAM,YAAY;AAGlF,gBAAa,QAAQ,YAAY;AACjC,oBAAiB,QAAQ;AACzB,UAAO;WACA,KAAK;AACZ,cAAW,QAAQ,eAAe,QAAQ,IAAI,UAAU;AACxD,UAAO;IACL,UAAU;IACV,MAAM,EAAE,IAAI,IAAI;IAChB,OAAO;KAAE,WAAW;KAAI,OAAO;KAAI,kBAAkB;KAAG,WAAW;KAAI,cAAc;KAAI;IAC1F;YACO;AACR,eAAY,QAAQ;;;AAIxB,QAAO;EACL;EACA;EACA,OAAO;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD"}